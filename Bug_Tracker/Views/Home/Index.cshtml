@using Bug_Tracker.Helpers
@using Microsoft.AspNet.Identity;
@using Bug_Tracker.Models;
@model AccountIndex
@{
    ViewBag.Title = "Home Page";
    var userHelper = new UserHelper();
    var projectHelper = new ProjectHelper();
    var ticketHelper = new TicketHelper();
    var roleHelper = new RoleHelper();
    var low = 0;
    var medium = 0;
    var high = 0;
    var urgent = 0;
    ApplicationDbContext db = new ApplicationDbContext();
    foreach (var ticket in Model.Tickets)
    {

        if (ticket.TicketPriority.Name == "Low")
        {
            low = low + 1;
        }
        if (ticket.TicketPriority.Name == "Medium")
        {
            medium = medium + 1;
        }
        if (ticket.TicketPriority.Name == "High")
        {
            high = high + 1;
        }
        if (ticket.TicketPriority.Name == "URGENT")
        {
            urgent = urgent + 1;
        }
    }
    int pieNum = 0;
    int pieDen = 0;
    foreach (var project in projectHelper.ListUserProjects(User.Identity.GetUserId()))
    {
        if (project.Tickets.Count() > 0)
        {
            int numerator = project.Tickets.Where(t => t.ProjectId == project.Id).Where(t => t.IsResolved == true).Count();
            pieNum = pieNum + numerator;
            int denominator = project.Tickets.Count();
            pieDen = pieDen + denominator;
        }
    }
    var unresolved = pieDen - pieNum;
    var resolved = pieNum;

    int ticketRes = 0;
    int total = 0;
    foreach (var ticket in ticketHelper.GetMyTickets())
    {
        if (ticket.IsResolved == true)
        {
            ticketRes += 1;
        }
        total += 1;
    }
    int ticketUnres = total - ticketRes;

}
<style>
    .dataTables_length {
        width: 50%;
        margin-bottom: -27px;
        visibility: hidden
    }

    #yondertable_paginate {
        margin-top: -25px;
        cursor: pointer;
        visibility: hidden
    }

    #yondertable_filter {
        visibility: hidden
    }

    #yondertable_info {
        visibility: hidden
    }

    #heretable_paginate {
        margin-top: -25px;
        cursor: pointer;
        visibility: hidden
    }

    #heretable_filter {
        visibility: hidden
    }

    #heretable_info {
        visibility: hidden
    }
</style>
<h1 style="padding-top:1rem; color:#343a40">Welcome Back, @Model.User.FirstName</h1>
<div class="row">
    <div class="col-8">
        <div class="small-box" style="padding:10px; background-color:#343a40; color:white;">
            <div class="row" style="margin-bottom:20px; padding:20px">
                <div class="col">
                    <h1 style="margin-left:2rem; margin-bottom:-20px">Tickets By Priority</h1>
                    <div id="myChart">

                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:-6em; margin-bottom:2rem">
                <div class="col-2 offset-1" style="left:6.5rem">Low</div>
                <div class="col-2" style="left:7rem">Medium</div>
                <div class="col-2" style="left:8.5rem">High</div>
                <div class="col-2" style="left:9rem">URGENT</div>
            </div>
        </div>
        <div class="small-box" style="padding:10px; background-color:#343a40; color:white;">
            <div class="row" style="margin-bottom:20px; padding:20px">
                <div class="col">
                    <h2 style="margin-bottom:4rem">Recent Comments</h2>
                    @if (User.IsInRole("Admin"))
                    {
                        foreach (var comment in ticketHelper.GetMyComments().OrderByDescending(a => a.Created).Take(6))
                        {
                            <div style="padding-left:20px; padding-right:20px; padding-bottom:10px; padding-top:10px;margin-top:-20px; cursor:pointer" onclick="window.location.href='@Url.Action("Details", "Tickets", new { comment.Ticket.Id })'">
                                <h5 style="color:cornflowerblue"><img class="img-circle" src="@comment.User.AvatarPath" width="30" /> @comment.User.FullName (@comment.Created.ToString("M/dd/yyyy"))<span class="float-right">@comment.Ticket.Title</span></h5>
                                <h5>@comment.Comment</h5><hr />
                            </div>
                        }
                    }
                    else
                    {
                        foreach (var comment in ticketHelper.GetMyComments().OrderByDescending(a => a.Created).Take(10))
                        {
                            <div style="padding-left:20px; padding-right:20px; padding-bottom:10px; padding-top:10px;margin-top:-20px; cursor:pointer" onclick="window.location.href='@Url.Action("Details", "Tickets", new { comment.Ticket.Id })'">
                                <h5 style="color:cornflowerblue"><img class="img-circle" src="@comment.User.AvatarPath" width="30" /> @comment.User.FullName (@comment.Created.ToString("M/dd/yyyy"))<span class="float-right">@comment.Ticket.Title</span></h5>
                                <h5>@comment.Comment</h5><hr />
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="small-box" style="padding:10px; background-color:forestgreen; color:white; padding-bottom:0">
            <div class="row" style="margin-bottom:20px; padding:20px">
                @if (User.IsInRole("ProjectManager"))
                {
                    <h2 style="margin-bottom:0.5rem !important">Unassigned Tickets</h2>
                    if (Model.Tickets.Any(g => g.TicketStatus.Name == "Open"))
                    {
                        <table class="table dataTable" id="yondertable">
                            <thead>
                                <tr>
                                    <th>
                                        Ticket
                                    </th>
                                    <th>
                                        Project
                                    </th>
                                    <th>
                                        Priority
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var project in Model.Projects)
                                {
                                    foreach (var ticket in project.Tickets)
                                    {
                                        if (ticket.TicketStatus.Name == "Open")
                                        {
                                            <tr style="cursor:pointer" onclick="window.location.href='@Url.Action("Details", "Tickets", new { ticket.Id })'">
                                                <td>
                                                    @ticket.Title
                                                </td>
                                                <td>
                                                    @ticket.Project.Name
                                                </td>
                                                <td>
                                                    @ticket.TicketPriority.Name
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h4>All of your projects have been assigned developers  <i class="fa fa-check-circle"></i></h4>
                    }
                }
                @if (User.IsInRole("Admin"))
                {
                    <h2 style="margin-bottom:0.5rem !important">Unassigned Users</h2>
                    if (roleHelper.UsersInRole("Unassigned").FirstOrDefault() != null)
                    {
                        <table class="table dataTable" id="yondertable">
                            <thead>
                                <tr>
                                    <th style="width:10rem">
                                        Name
                                    </th>
                                    <th>
                                        Email
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in roleHelper.UsersInRole("Unassigned"))
                                {
                                    <tr style="cursor:pointer" onclick="window.location.href='@Url.Action("ManageUserRole","Users", new { user.Id })'">
                                        <td>
                                            <img src="@user.AvatarPath" width="30" class="img-circle" />
                                            @user.FullName
                                        </td>
                                        <td>
                                            @user.Email
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <h4>All of your users have been assigned to their roles. <i class="fa fa-check-circle"></i></h4>
                    }
                }
                @if (User.IsInRole("Developer") || User.IsInRole("Submitter"))
                {
                    <h2 style="margin-bottom:0.5rem !important">Recent Tickets</h2>
                    <table class="table dataTable" id="heretable" style="margin-top:1rem !important">
                        <thead>
                            <tr>
                                <th style="width:15rem">
                                    Issue
                                </th>
                                <th style="width:5rem">
                                    Created
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model.Tickets.OrderBy(d => d.Created))
                            {
                                <tr style="cursor:pointer" onclick="window.location.href='@Url.Action("Details","Tickets", new { ticket.Id })'">
                                    <td>
                                        @ticket.Title
                                    </td>
                                    <td>
                                        @ticket.Created.ToString("M/dd/yyyy")
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
        <div class="small-box" style="padding:10px; background-color:cornflowerblue; color:white;">
            @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
            {
                <div class="row" style="margin-bottom: 0.5rem !important ; padding: 20px">
                    <div class="col">
                        <h2>Ticket Progression</h2>
                    </div>
                </div>
                <div class="row" style="margin-top:-8rem; margin-bottom:-4rem">
                    <div class="col">
                        <div id="xchart"></div>
                    </div>
                </div>
                <div class="row" style="margin-bottom:-1rem">
                    <div class="col text-center">
                        <h4>By Project</h4>
                    </div>
                </div>
                <div class="row" style="margin-bottom:20px; padding:20px">
                    <div class="col">
                        <table class="table" style="font-size:20px">
                            <thead>
                                <tr>
                                    <th>Project</th>
                                    <th class="text-center">Resolved %</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var project in projectHelper.ListUserProjects(User.Identity.GetUserId()).Take(6))
                                {
                                    if (project.Tickets.Count() > 0)
                                    {
                                        double numerator = project.Tickets.Where(t => t.ProjectId == project.Id).Where(t => t.IsResolved == true).Count();
                                        double denominator = project.Tickets.Count();
                                        double percentResolved = numerator / denominator;
                                        percentResolved = percentResolved * 100;
                                        percentResolved = Math.Round(percentResolved, 2);
                                        <tr onclick="window.location.href='@Url.Action("Details","Projects", new { project.Id})'" style="cursor:pointer">
                                            <td>@project.Name</td>
                                            <td class="text-center">@percentResolved.ToString()</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            }
            else
            {
                <div class="row" style="margin-bottom: 0.5rem !important ; padding: 20px">
                    <div class="col">
                        <h2>Ticket Progression</h2>
                    </div>
                </div>
                <div class="row" style="margin-top:-8rem; margin-bottom:-5rem">
                    <div class="col">
                        <div id="zchart"></div>
                    </div>
                </div>
            }
        </div>
        @if (User.IsInRole("Developer") || User.IsInRole("Submitter") || User.IsInRole("ProjectManager"))
        {
            <div class="small-box" style="padding:10px; background-color:#9e5ed6; color:white;">
                <div class="row" style="padding:20px">
                    <div class="col">
                        <h2>Recent Attachments</h2>
                    </div>
                </div>
                <div class="row" style="margin-bottom: 0.5rem !important ; padding: 20px">
                    @foreach (var image in ticketHelper.GetMyTickets().SelectMany(g => g.TicketAttachments).OrderByDescending(b => b.Created).Take(4))
                    {
                        var ext = Path.GetExtension(image.FilePath);
                        if (ext == ".png" || ext == ".jpg" || ext == ".gif" || ext == ".tiff" || ext == ".jpeg")
                        {
                            <div class="col-6" onclick="window.location.href='@Url.Action("Details","Tickets", new { image.Ticket.Id })'" style="cursor:pointer; padding-bottom:1rem">
                                <p>@image.Ticket.Title (@image.User.FullName)</p>
                                <img src="@image.FilePath" width="150" />
                            </div>
                        }
                        else
                        {
                            <span></span>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>
@if (User.IsInRole("Admin"))
{
    <div class="row">
        <div class="col">
            <div class="small-box" style="padding:10px; background-color:#9e5ed6; color:white;">
                <div class="row" style="padding:20px">
                    <div class="col">
                        <h2>Recent Attachments</h2>
                    </div>
                </div>
                <div class="row" style="margin-bottom: 0.5rem !important ; padding: 20px">
                    @foreach (var image in db.TicketAttachments.ToList().OrderByDescending(b => b.Created).Take(8))
                    {
                        var ext = Path.GetExtension(image.FilePath);
                        if (ext == ".png" || ext == ".jpg" || ext == ".gif" || ext == ".tiff" || ext == ".jpeg")
                        {
                            <div class="col-3" onclick="window.location.href='@Url.Action("Details","Tickets", new { image.Ticket.Id })'" style="cursor:pointer; padding-bottom:1rem">
                                <p>@image.Ticket.Title (@image.User.FullName)</p>
                                <img src="@image.FilePath" width="200" />
                            </div>
                        }
                        else
                        {
                            <span></span>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}

@section scripts{
    <script src="https://cdn.zingchart.com/zingchart.min.js" SameSite="None"></script>
    <script>

        $(document).ready(function () {
            $('#yondertable').DataTable({
                "pageLength": 5
            });
        });
        $(document).ready(function () {
            $('#heretable').DataTable({
                "pageLength": 5,
                "order": [[1,"desc"]]
            });
        });

    var array = [@low,@medium,@high,@urgent]
    function bar() {
        zingchart.render({
            id: "myChart",
            output: "svg",
            height: 400,
            width: '100%',
            data: {
                type: "bar",
                "background-color": "transparent",
                'scale-y': {
                    "tick": {
                        "visible": false,
                        "line-color": "none"
                    }
                },
                'scale-x': {
                    "visible": false,
                },

                series: [
                    {
                        values: [@low],
                        "background-color": "forestgreen"
                    },
                    {
                        values: [@medium],
                        "background-color": "cornflowerblue"
                    },
                    {
                        values: [@high],
                        "background-color": "#ffc107"
                    },
                    {
                        values: [@urgent],
                        "background-color": "#c6371c"
                    },
                ]
            }
        });
        };
        zingchart.render({

            id: "xchart",
            output: "svg",
            height: 400,
            width: '100%',
            data: {
                type: "pie3d",
                plot: {
                    borderColor: "#2B313B",
                    borderWidth: 4,
                    // slice: 90,
                    valueBox: {
                        fontSize: '14',
                        placement: 'out',
                        text: '%t\n%npv%',
                        fontFamily: "Open Sans",
                        fontColor: 'white'
                    },
                    tooltip: {
                        fontSize: '22',
                        fontFamily: "Open Sans",
                        padding: "5 10",
                        fontColor: 'white'
                    },
                },
                backgroundColor: "transparent",
                series: [
                    {
                        values: [@unresolved],
                        text: "Unresolved",
                        palette: 1
                    },
                    {
                        text: "Resolved",
                        values: [@resolved],
                        palette: 2
                    }
                ]
            }
        });
        zingchart.render({
            id: "zchart",
            output: "svg",
            height: 400,
            width: '100%',
            data: {
                type: "pie3d",
                plot: {
                    borderColor: "#2B313B",
                    borderWidth: 4,
                    valueBox: {
                        fontSize: '14',
                        placement: 'out',
                        text: '%t\n%npv%',
                        fontFamily: "Open Sans",
                        fontColor: 'white'
                    },
                    tooltip: {
                        fontSize: '22',
                        fontFamily: "Open Sans",
                        padding: "5 10",
                        fontColor: 'white'
                    },
                },
                backgroundColor: "transparent",
                series: [
                    {
                        values: [@ticketUnres],
                        text: "Unresolved",
                        palette: 1
                    },
                    {
                        text: "Resolved",
                        values: [@ticketRes],
                        palette: 2
                    }
                ]
            }
        });
        bar();

    </script>
}
